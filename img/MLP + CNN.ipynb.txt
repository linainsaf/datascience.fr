{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "TP 7 CNN.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyPoptT8EbcKEKnmeR/i5JEQ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/linainsaf/ML-M1/blob/main/CNN.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7UlgM7GVW5ai"
      },
      "source": [
        "I. Chargement et mise en forme des donn√©es"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eWe6WbLhWhaT"
      },
      "source": [
        "# Import libraries and modules\n",
        "# Import libraries and modules\n",
        "import numpy as np\n",
        "import time\n",
        "np.random.seed(123) # for reproducibility\n",
        "from matplotlib import pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import confusion_matrix\n",
        "import tensorflow as tf\n",
        "from tensorflow.keras import Sequential, Model, Input\n",
        "from tensorflow.keras.layers import Conv2DTranspose, Reshape, Dense, Activation, Flatten, Dropout, Convolution2D, MaxPooling2D, Input\n",
        "#from utilitaire import affiche\n",
        "##################################################\n",
        "# I - Load pre-shuffled MNIST data train and test sets\n",
        "##################################################\n",
        "from tensorflow.keras.datasets.mnist import load_data\n",
        "from matplotlib import pyplot"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6z6nek7khyoi"
      },
      "source": [
        "def affiche(history):\n",
        " # summarize history for accuracy\n",
        " plt.plot(history.history['accuracy'])\n",
        " plt.plot(history.history['val_accuracy'])\n",
        " plt.title('model accuracy')\n",
        " plt.ylabel('accuracy')\n",
        " plt.xlabel('epoch')\n",
        " plt.legend(['train', 'test'], loc='upper left')\n",
        " plt.show()\n",
        " # summarize history for loss\n",
        " plt.plot(history.history['loss'])\n",
        " plt.plot(history.history['val_loss'])\n",
        " plt.title('model loss')\n",
        " plt.ylabel('loss')\n",
        " plt.xlabel('epoch')\n",
        " plt.legend(['train', 'test'], loc='upper left')\n",
        " plt.show()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 261
        },
        "id": "IFBOZ843XBFm",
        "outputId": "5c0c74a9-68a8-4b53-a069-62db7522c854"
      },
      "source": [
        "# load dataset\n",
        "(X_train, y_train), (X_test, y_test) = load_data()\n",
        "X_train, pipo, y_train, pipo = train_test_split(X_train, y_train, test_size=0.9)\n",
        "X_test, pipo, y_test, pipo = train_test_split(X_test, y_test, test_size=0.9)\n",
        "for i in range(200):\n",
        " plt.subplot(10,20,i+1)\n",
        " plt.imshow(X_train[i,:].reshape([28,28]), cmap='gray')\n",
        " plt.axis('off')\n",
        "plt.show()\n",
        "# Preprocess input data\n",
        "X_train = X_train.reshape(X_train.shape[0], X_train.shape[1], X_train.shape[2], 1)\n",
        "X_test = X_test.reshape(X_test.shape[0], X_train.shape[1], X_train.shape[2], 1)\n",
        "X_train = X_train.astype('float32')\n",
        "X_test = X_test.astype('float32')\n",
        "X_train /= 255\n",
        "X_test /= 255\n",
        "# Preprocess class labels\n",
        "Y_train = tf.keras.utils.to_categorical(y_train, 10)\n",
        "Y_test = tf.keras.utils.to_categorical(y_test, 10)\n",
        "X_test.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 200 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1000, 28, 28, 1)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qr5WnjQ7aBz6"
      },
      "source": [
        "Questions\n",
        "-  Que r√©alise-t-il ? Justifier chaque ligne.\n",
        "- Combien y a-t-il d‚Äôimages dans la base de test ? Dans la base d‚Äôapprentissage ? \n",
        "-Quelle est la taille des images ? Combien y a-t-il de classes ?\n",
        "- En quoi consiste le pr√©-traitement des donn√©es d‚Äôentr√©es ? Pourquoi le r√©alise-t-on ?\n",
        "- A quoi sert la fonction tf.keras.utils.to_categorical ? \n",
        "- Quelle est la taille de y_train ? de\n",
        "Y_train ? Commenter"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "T7KKp-N9YhFW",
        "outputId": "9d19c965-3f63-4592-d40b-e906aac566ce"
      },
      "source": [
        "print(\"nombre d'images en train : \", len(X_train))\n",
        "print(\"nombre d'images en test : \", len(X_test))\n",
        "\n",
        "print(\"la taille des images est : \", len(X_train[0]),'x',len(X_train[0][0]),\"pixels\")\n",
        "\n",
        "print(\"Nombre de  de classes : \", Y_test.shape[1])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "nombre d'images en train :  6000\n",
            "nombre d'images en test :  1000\n",
            "la taille des images est :  28 x 28 pixels\n",
            "Nombre de  de classes :  10\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YGguJ2Aegp4S"
      },
      "source": [
        "II. R√©gression logistique\n",
        "\n",
        "\n",
        "II.1. d√©finition du r√©seau"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Mnx428UtpT3O",
        "outputId": "23287b78-b762-4ce1-e0b0-c1a79d237d60"
      },
      "source": [
        "inputs = Input(shape=(28,28,1))\n",
        "x = inputs\n",
        "x=Flatten()(x)\n",
        "i= Dense(256, activation='relu')(x)\n",
        "outputs = Dense(10, activation='softmax')(i)\n",
        "model = Model(inputs, outputs)\n",
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"model\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_1 (InputLayer)         [(None, 28, 28, 1)]       0         \n",
            "_________________________________________________________________\n",
            "flatten (Flatten)            (None, 784)               0         \n",
            "_________________________________________________________________\n",
            "dense (Dense)                (None, 256)               200960    \n",
            "_________________________________________________________________\n",
            "dense_1 (Dense)              (None, 10)                2570      \n",
            "=================================================================\n",
            "Total params: 203,530\n",
            "Trainable params: 203,530\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "TadRxZ1qhS9a"
      },
      "source": [
        "II.2. Apprentissage\n",
        "\n",
        "On utilise l‚Äôoptimiseur SGD (Stochastic gradient descent optimizer) avec ses param√®tres par d√©faut :"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "xWssnqzxhSKO",
        "outputId": "df7fcadc-6714-4538-af09-24b9e03f327d"
      },
      "source": [
        "lr= 0.8\n",
        "batch_size=256\n",
        "epochs=15\n",
        "sgd1= tf.keras.optimizers.SGD(learning_rate=lr,momentum=0.8)\n",
        "model.compile(loss='categorical_crossentropy', optimizer=sgd1, metrics=['accuracy'])\n",
        "tps1 = time.clock()\n",
        "history =model.fit(X_train, Y_train, batch_size=batch_size, epochs=epochs,\n",
        "verbose=1,validation_data=(X_test, Y_test))\n",
        "tps2 = time.clock()\n",
        "affiche(history) #donnee en annexe\n",
        "print('lr=',lr,'batch_size=',batch_size, 'epochs=',epochs)\n",
        "print('Temps d apprentissage',tps2 - tps1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\n",
            "  \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/15\n",
            "24/24 [==============================] - 3s 20ms/step - loss: 1.4421 - accuracy: 0.5563 - val_loss: 0.3203 - val_accuracy: 0.9080\n",
            "Epoch 2/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.3125 - accuracy: 0.9035 - val_loss: 0.2485 - val_accuracy: 0.9170\n",
            "Epoch 3/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.1786 - accuracy: 0.9467 - val_loss: 0.2001 - val_accuracy: 0.9380\n",
            "Epoch 4/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.1034 - accuracy: 0.9688 - val_loss: 0.2007 - val_accuracy: 0.9400\n",
            "Epoch 5/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0627 - accuracy: 0.9848 - val_loss: 0.1854 - val_accuracy: 0.9440\n",
            "Epoch 6/15\n",
            "24/24 [==============================] - 0s 5ms/step - loss: 0.0454 - accuracy: 0.9870 - val_loss: 0.1857 - val_accuracy: 0.9440\n",
            "Epoch 7/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0277 - accuracy: 0.9936 - val_loss: 0.1725 - val_accuracy: 0.9560\n",
            "Epoch 8/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0169 - accuracy: 0.9979 - val_loss: 0.1716 - val_accuracy: 0.9490\n",
            "Epoch 9/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0117 - accuracy: 0.9983 - val_loss: 0.1749 - val_accuracy: 0.9470\n",
            "Epoch 10/15\n",
            "24/24 [==============================] - 0s 5ms/step - loss: 0.0093 - accuracy: 0.9992 - val_loss: 0.1866 - val_accuracy: 0.9470\n",
            "Epoch 11/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0067 - accuracy: 0.9992 - val_loss: 0.1847 - val_accuracy: 0.9450\n",
            "Epoch 12/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0038 - accuracy: 0.9999 - val_loss: 0.1817 - val_accuracy: 0.9500\n",
            "Epoch 13/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0039 - accuracy: 0.9996 - val_loss: 0.1823 - val_accuracy: 0.9520\n",
            "Epoch 14/15\n",
            "24/24 [==============================] - 0s 4ms/step - loss: 0.0026 - accuracy: 1.0000 - val_loss: 0.1863 - val_accuracy: 0.9510\n",
            "Epoch 15/15\n",
            "24/24 [==============================] - 0s 5ms/step - loss: 0.0024 - accuracy: 1.0000 - val_loss: 0.1880 - val_accuracy: 0.9500\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\n",
            "  if __name__ == '__main__':\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "lr= 0.8 batch_size= 256 epochs= 15\n",
            "Temps d apprentissage 3.191154000000001\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YOMMdh5dicf0"
      },
      "source": [
        "II.3. Evaluation du mod√®le"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cp8QGcgbfgUH",
        "outputId": "51d7bedf-82fb-407f-fe5e-6327cbce6d36"
      },
      "source": [
        "score = model.evaluate(X_test, Y_test, verbose=0)\n",
        "print('Test loss:', score[0])\n",
        "print('Test accuracy:', score[1]*100)\n",
        "y_pred = model.predict(X_test)\n",
        "y_pred = y_pred.argmax(axis=-1)\n",
        "print('Confusion Matrix')\n",
        "print(confusion_matrix(y_test, y_pred))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Test loss: 0.18801942467689514\n",
            "Test accuracy: 94.9999988079071\n",
            "Confusion Matrix\n",
            "[[ 93   0   0   0   0   0   0   0   2   0]\n",
            " [  0 105   1   0   0   0   0   0   0   0]\n",
            " [  0   0  85   0   1   0   1   0   2   0]\n",
            " [  0   0   4  91   0   3   0   0   1   0]\n",
            " [  0   0   0   0 107   0   1   0   1   2]\n",
            " [  0   0   0   3   0  83   1   0   1   1]\n",
            " [  0   0   0   0   0   2  91   0   2   0]\n",
            " [  0   1   1   1   1   0   0 110   0   2]\n",
            " [  0   2   0   4   0   3   0   1 103   0]\n",
            " [  1   0   0   2   0   1   0   1   0  82]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Kpt7R_Xa-2NH"
      },
      "source": [
        "IV. CNN"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qO5SxrXFihLS",
        "outputId": "9f0f1b56-2011-42bf-b104-5892917fb882"
      },
      "source": [
        "inputs = Input(shape=(28,28,1)) \n",
        "x = inputs\n",
        "x = Convolution2D(32, kernel_size = (3, 3), activation='relu' )(x) \n",
        "x = Convolution2D(64, kernel_size = (3, 3), activation='relu' )(x) \n",
        "x = MaxPooling2D((3, 3))(x) \n",
        "x = Flatten()(x) \n",
        "x = Dense(256, activation='relu')(x) \n",
        "x = Dropout(0.5)(x) \n",
        "outputs= Dense(10, activation='softmax')(x) \n",
        "model = Model(inputs, outputs) \n",
        "model.summary() "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"model_7\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "input_8 (InputLayer)         [(None, 28, 28, 1)]       0         \n",
            "_________________________________________________________________\n",
            "conv2d_12 (Conv2D)           (None, 26, 26, 32)        320       \n",
            "_________________________________________________________________\n",
            "conv2d_13 (Conv2D)           (None, 24, 24, 64)        18496     \n",
            "_________________________________________________________________\n",
            "max_pooling2d_6 (MaxPooling2 (None, 8, 8, 64)          0         \n",
            "_________________________________________________________________\n",
            "flatten_7 (Flatten)          (None, 4096)              0         \n",
            "_________________________________________________________________\n",
            "dense_14 (Dense)             (None, 256)               1048832   \n",
            "_________________________________________________________________\n",
            "dropout_6 (Dropout)          (None, 256)               0         \n",
            "_________________________________________________________________\n",
            "dense_15 (Dense)             (None, 10)                2570      \n",
            "=================================================================\n",
            "Total params: 1,070,218\n",
            "Trainable params: 1,070,218\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ZSNPncuti_fy",
        "outputId": "d6b57fc1-0ca2-44f8-8675-893cf0a77abf"
      },
      "source": [
        "lr= 0.13\n",
        "batch_size=256\n",
        "epochs=26\n",
        "sgd1= tf.keras.optimizers.SGD(learning_rate=lr,momentum=0.9)\n",
        "model.compile(loss='categorical_crossentropy', optimizer=sgd1, metrics=['accuracy'])\n",
        "tps1 = time.clock()\n",
        "history =model.fit(X_train, Y_train, batch_size=batch_size, epochs=epochs,\n",
        "verbose=1,validation_data=(X_test, Y_test))\n",
        "tps2 = time.clock()\n",
        "affiche(history) #donnee en annexe\n",
        "print('lr=',lr,'batch_size=',batch_size, 'epochs=',epochs)\n",
        "print('Temps d apprentissage',tps2 - tps1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/26\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:6: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\n",
            "  \n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "24/24 [==============================] - 1s 21ms/step - loss: 1.8130 - accuracy: 0.3930 - val_loss: 0.4410 - val_accuracy: 0.8650\n",
            "Epoch 2/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.4424 - accuracy: 0.8590 - val_loss: 0.1489 - val_accuracy: 0.9590\n",
            "Epoch 3/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.2185 - accuracy: 0.9292 - val_loss: 0.0908 - val_accuracy: 0.9690\n",
            "Epoch 4/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.1327 - accuracy: 0.9565 - val_loss: 0.0830 - val_accuracy: 0.9700\n",
            "Epoch 5/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.1087 - accuracy: 0.9650 - val_loss: 0.0700 - val_accuracy: 0.9820\n",
            "Epoch 6/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0812 - accuracy: 0.9730 - val_loss: 0.0641 - val_accuracy: 0.9780\n",
            "Epoch 7/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0547 - accuracy: 0.9828 - val_loss: 0.0745 - val_accuracy: 0.9770\n",
            "Epoch 8/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0532 - accuracy: 0.9842 - val_loss: 0.0712 - val_accuracy: 0.9790\n",
            "Epoch 9/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0574 - accuracy: 0.9827 - val_loss: 0.0608 - val_accuracy: 0.9810\n",
            "Epoch 10/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0426 - accuracy: 0.9863 - val_loss: 0.0635 - val_accuracy: 0.9840\n",
            "Epoch 11/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0294 - accuracy: 0.9895 - val_loss: 0.0625 - val_accuracy: 0.9840\n",
            "Epoch 12/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0275 - accuracy: 0.9915 - val_loss: 0.0591 - val_accuracy: 0.9880\n",
            "Epoch 13/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0237 - accuracy: 0.9899 - val_loss: 0.0747 - val_accuracy: 0.9810\n",
            "Epoch 14/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0356 - accuracy: 0.9876 - val_loss: 0.0894 - val_accuracy: 0.9760\n",
            "Epoch 15/26\n",
            "24/24 [==============================] - 0s 14ms/step - loss: 0.0275 - accuracy: 0.9901 - val_loss: 0.0784 - val_accuracy: 0.9810\n",
            "Epoch 16/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0223 - accuracy: 0.9920 - val_loss: 0.0656 - val_accuracy: 0.9820\n",
            "Epoch 17/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0232 - accuracy: 0.9920 - val_loss: 0.0702 - val_accuracy: 0.9850\n",
            "Epoch 18/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0161 - accuracy: 0.9949 - val_loss: 0.0651 - val_accuracy: 0.9820\n",
            "Epoch 19/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0175 - accuracy: 0.9937 - val_loss: 0.0728 - val_accuracy: 0.9800\n",
            "Epoch 20/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0189 - accuracy: 0.9933 - val_loss: 0.0829 - val_accuracy: 0.9800\n",
            "Epoch 21/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0176 - accuracy: 0.9934 - val_loss: 0.0816 - val_accuracy: 0.9790\n",
            "Epoch 22/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0142 - accuracy: 0.9960 - val_loss: 0.0757 - val_accuracy: 0.9820\n",
            "Epoch 23/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0142 - accuracy: 0.9957 - val_loss: 0.0791 - val_accuracy: 0.9820\n",
            "Epoch 24/26\n",
            "24/24 [==============================] - 0s 14ms/step - loss: 0.0098 - accuracy: 0.9971 - val_loss: 0.0747 - val_accuracy: 0.9860\n",
            "Epoch 25/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0145 - accuracy: 0.9948 - val_loss: 0.0823 - val_accuracy: 0.9800\n",
            "Epoch 26/26\n",
            "24/24 [==============================] - 0s 13ms/step - loss: 0.0135 - accuracy: 0.9944 - val_loss: 0.0750 - val_accuracy: 0.9850\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:9: DeprecationWarning: time.clock has been deprecated in Python 3.3 and will be removed from Python 3.8: use time.perf_counter or time.process_time instead\n",
            "  if __name__ == '__main__':\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "text": [
            "lr= 0.13 batch_size= 256 epochs= 26\n",
            "Temps d apprentissage 8.138545\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rja1tXLejN67"
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}
